// 外定義のSass取り込み
@import './mixin/flexboxsets';
@import './mixin/fonts';
@import './mixin/animations';
@import './mixin/mediaquerysets';

//@include font-face('<フォント名>', '＜フォントファイルまでのパス＞', <ウェイト>, <スタイル>, <タイプ>);
@include font-face('Raleway', '../fonts/Raleway-Light.ttf', 300, null, ttf);
@include font-face('Raleway', '../fonts/Raleway-Regular.ttf', 400, null, ttf);
@include font-face('Raleway', '../fonts/Raleway-Medium.ttf', 500, null, ttf);
@include font-face('Raleway', '../fonts/Raleway-Bold.ttf', 700, null, ttf);
@include font-face('Raleway', '../fonts/Raleway-ExtraBold.ttf', 800, null, ttf);
@include font-face('Raleway', '../fonts/Raleway-Black.ttf', 900, null, ttf);
@include font-face('NotoSansJP', '../fonts/NotoSansJP-Thin.otf', 100, null, otf);
@include font-face('NotoSansJP', '../fonts/NotoSansJP-Light.otf', 300, null, otf);
@include font-face('NotoSansJP', '../fonts/NotoSansJP-Regular.otf', 400, null, otf);
@include font-face('NotoSansJP', '../fonts/NotoSansJP-Bold.otf', 700, null, otf);
@include font-face('DINAlternate', '../fonts/DIN-Alternate-Bold.ttf', 700, null, ttf);


// テーマ定義（★追加修正はここで行う）
$theme-colors: (
     'default': rgb(22, 22, 22)
    ,'peach': linear-gradient(180deg, #F0CBA5, #ED6B82)
    ,'modern-pink': linear-gradient(0deg, #7C539D, #EB5D7E)
    ,'plum-plate': linear-gradient(135deg, #667eea 0%, #764ba2 100%)
);

// 最初のテーマカラー
$set-theme: 'default';


:root {
    font-size: 1.2vw;
    touch-action: manipulation; // ダブルタップ対策
}

// 基本設定
body {
    height: 100vh;
    width: 100vw;
    margin: auto;
    padding: 0;
    color: #fff;
    font: 800 15rem 'DINAlternate', sans-serif;
    font-size: 1rem;
    user-select: none; // テキスト選択の無効化 (連打対応)
    
    // テーマ背景設定
    background: map-get($theme-colors, $set-theme);
    @each $theme-name, $theme-color in $theme-colors {
        &.theme-#{$theme-name} {background: $theme-color}
    }
    
}



// Loading背景画面設定
#splash {
    position: fixed;
    width: 100%;
    height: 100%;
    z-index: 999;
    background:#333;
    text-align:center;
    color:#fff;
}

#splash-logo {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    
    img {
        // width:260px;
        width: 30vw;
    }
}

.fadeUp {
    opacity: 0;
    // @include useAnimation(fadeinAndUp, 0.4s, cubic-bezier(.46,1.37,.56,1.22), forwards, 0s, 1);
    @include useAnimation(fadeinAndUp, 0.4s, ease-out, forwards, 0s, 1);
}




.grid-container {
    display: grid;
    grid-template-columns: 2fr 6fr 1fr 6fr 2fr;
    grid-template-rows: 10vh 80vh 10vh;
    text-align: center;
    align-items: center;
}

.point {
    &-left, &-right, &-center {
        font-size: 20rem; // JSで制御中
        margin: 0;
        letter-spacing: 0.01em;
        
        &.cntUp {
            @include useAnimation(fadeinAndDown, 0.4s, ease-out, forwards, 0s, 1);
        }
        &.cntDown {
            @include useAnimation(fadeinAndUp, 0.4s, ease-out, forwards, 0s, 1);
        }
    }
}

.down-btn {
    &-left, &-right {
        color: rgba($color: #fff, $alpha: 0.2);
        font-size: 1rem;
    }
}

.up-btn {
    &-left, &-right {
        color: rgba($color: #fff, $alpha: 0.2);
        font-size: 1rem;
    }
}



// ----------------------------------
// メニューボタンのデザインと挙動
// ----------------------------------
$menu-btn-height: 6vh;
$menu-btn-height-half: calc((#{$menu-btn-height} - 1vh) / 2);
@mixin menu-btn-common-val {
    display: inline-block;
    transition: all .5s;
    box-sizing: border-box;
}

.menu-btn {
    position: fixed;
    top: 5vh;
    right: 5vw;
    width: $menu-btn-height;
    height: $menu-btn-height;
    cursor: pointer;
    z-index: 10;
    @include menu-btn-common-val;
    
    span {
        position: absolute;
        left: 0;
        width: 100%;
        height: calc(#{$menu-btn-height} / 6);
        background-color: rgba($color: #fff, $alpha: 0.2);
        border-radius: 4px;
        @include menu-btn-common-val;
    }
    
    span:nth-of-type(1) {
        top: 0;
    }
    span:nth-of-type(2) {
        top: $menu-btn-height-half;
    }
    span:nth-of-type(3) {
        bottom: 0;
    }
}

.menu-btn.active {
    span:nth-of-type(1) {
        -webkit-transform: translateY($menu-btn-height-half) rotate(315deg);
        transform: translateY($menu-btn-height-half) rotate(315deg);
    }
    span:nth-of-type(2) {
        opacity: 0;
    }
    span:nth-of-type(3) {
        -webkit-transform: translateY(calc(#{$menu-btn-height-half} * -1)) rotate(-315deg);
        transform: translateY(calc(#{$menu-btn-height-half} * -1)) rotate(-315deg);
    }
}



// メニュー表示時の画面マスク
.menu-mask {
    display: block;
    background: #000;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    visibility: hidden;
    z-index: 2;
    
    &.show {
        visibility: visible;
        opacity: 0.7;
        transition: opacity 2s;
    }
}


// メニュー本体
.menu-body {
    position: fixed;
    bottom: -5vh;
    width: 100%;
    padding: 0 5vw;
    opacity: 0;
    visibility: hidden;
    transition: opacity .5s, visibility .5s, bottom 1s;
    z-index: 4;
    
    &.show {
        bottom: 15vh;
        opacity: 1;
        visibility: visible;
    }
    
    ul {
        display: flex;
        justify-content: space-around;
        flex-wrap: wrap;
    }
    
    ul li {
        font-size: unquote("min(5rem, 60px)");
        text-transform: uppercase;
        list-style-type: none;
        padding: 1.5rem;
        margin: 0;
        transition-property: color;
        transition-duration: 0.5s;
        transform: rotate(-25deg);
        
        &:hover {
            color: rgba(228, 95, 95, 1.0);
        }
    }
    
}


// ポップアップ共通
.popup {
    position:fixed;
    width: unquote("min(70vw, 350px)");
    height: unquote("min(40vh, 200px)");
    font-size: unquote("min(2.8rem, 16px)");
    text-align: center;
    color: #000;
    background: #fff;
    box-shadow: 0px 5px 5px 10px rgba($color: #222, $alpha: 0.2);
    border-radius: 10px;
    visibility: hidden;
    opacity: 0;
    z-index: 5;
    transform: translate(-50%, -50%);
    
    .grid-container {
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 35% 40% 25%;
        width: 100%;
        height: 100%;
        text-align: center;
        align-items: center;
        font-family: 'NotoSansJP', sans-serif;
        font-weight: 300;
        color: #666;
    }
    
    .btns {
        height: 100%;
        display: grid;
        grid-template-columns: 1fr 1fr;
        
        .btn {
            display: flex;
            align-items: center;
            justify-content: center;
            list-style-type: none;
            height: 100%;
            background: #673AB7;
            color: #fff;
            border: .01rem solid #fff;
            
            &.ok-btn {
                border-bottom-left-radius: 10px;
            }
            
            &.cancel-btn {
                border-bottom-right-radius: 10px;
            }
            
            &:hover {
                background: #7E57C2;
            }
        }
    }
    
}


// リセット用ポップアップ
.reset-pu {
    
    &.show {
        opacity: 1;
        visibility: visible;
        @include useAnimation(popupAndFixCenter, 0.6s, cubic-bezier(0.22, 1, 0.36, 1), forwards, 0s, 1);
    }
    
    .grid-container {
        grid-template-columns: 1fr;
        grid-template-rows: 30% 45% 25%;
    }
    
}

// ポイントセット用ポップアップ
.set-pnt-pu {
    
    &.show {
        opacity: 1;
        visibility: visible;
        @include useAnimation(popupAndFixCenter, 0.6s, cubic-bezier(0.22, 1, 0.36, 1), forwards, 0s, 1);
    }
    
    .grid-container {
        grid-template-columns: 1fr;
        grid-template-rows: 35% 40% 25%;
    }
    
    .ipts {
        align-self: flex-start;
        text-align: right;
        
        .ipt {
            text-align: center;
            font-family: 'DINAlternate', sans-serif;
            font-weight: 700;
            color: #666;
            font-size: unquote("min(3rem, 24px)");
        }
    }
    
}




// テーマ選択
.seltheme-body {
    display: grid;
    grid-template-columns: 1fr;
    text-align: left;
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: auto; // 要素がはみ出した際にスクロールバーを表示
    opacity: 0;
    padding: 0;
    margin: 0;
    font-size: unquote("min(8rem, 60px)");
    text-transform: uppercase;
    z-index: 0;
    transform: translateX(-100%);
    @include useAnimation(slideToRight, 2.6s, cubic-bezier(0.22, 1, 0.36, 1), forwards, 0s, 1);
    
    &.show {
        opacity: 1;
        z-index: 10;
        @include useAnimation(slideFromLeft, 2.6s, cubic-bezier(0.22, 1, 0.36, 1), forwards, 0s, 1);
    }
    
    &>div {
        width: 100%;
        height: 100%;
        padding: 0.5rem 10%;
        display: flex;
        align-items: center;
        &:hover {
            color: rgba(228, 95, 95, 1.0);
        }
    }
    
    @each $theme-name, $theme-color in $theme-colors {
        &>.#{$theme-name} {
            &::before {content: $theme-name;}
            background: $theme-color;
        }
    }
    
}

